(self.webpackChunkbookshop=self.webpackChunkbookshop||[]).push([[15],{624:(n,i,s)=>{"use strict";s.r(i),s.d(i,{default:()=>e});const e=(n,i,s,e=function(n,i,s){let e;return n.forEach((function(n){n[Object.keys(n)].forEach((function(n){"uniqueID"==s?n.uniqueID==i&&(e=n):"url"==s&&n.url==i&&(e=n)}))})),e}(n,i,s))=>{return`\n        <thead>\n        <tr>\n            <th class="TextHeader " colspan="2">BookShop "PROЧИТАЙ"</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n        \n        <th scope="row" class="SingleElem"> \n        <div class="card border-info mb-3  first-block block-size" style="max-width: 40%;">\n                        <div class="card-header "> ${e.author}</div>\n                        <div class="card-body">\n                            <h4 class="card-title">${e.name}</h4>\n                            <img src="${e.images}" alt="${e.url}" />\n                        </div>\n                        <button type="button" class="btn btn-secondary" id="${e.uniqueID.split("").reverse().join("")}"" >${(d=e.price,null==d.split("/")[1]?"":`${d.split("/")[0]}UAH`).strike()} ${function(n){return null==n.split("/")[1]?`${n.split("/")[0]}UAH`:` ${n.split("/")[1]}UAH`}(e.price)}</button>\n        </th>\n        <th scope="row" class="SingleElemDescr">\n        <div>\n                <div class="makeBold">Назва книги:</div>\n                ${e.name}\n        </div>\n        <div>\n                <div class="makeBold">Автор:</div>\n                ${e.author}\n        </div>\n        <div>\n                <div class="makeBold">Жанр:</div>\n                ${e.genre}\n        </div>\n        <div>\n                <div class="makeBold">Рік публікації:</div>\n                ${e.year}\n        </div>\n        <div>\n                <div class="makeBold">Видавництво:</div>\n                ${e.publisher}\n        </div>\n        <div>\n                <div class="makeBold">Про що:</div>\n                ${e.description}\n        </div>\n\n        \n        </th>\n</tr>\n        \n        </tbody>\n\n\n\n\n\n`;var d}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ib29rc2hvcC8uL0pTL3ZpZXcvcHJvZHVjdERlc2NyaXB0aW9uLmpzIl0sIm5hbWVzIjpbImRhdGEiLCJLZXkiLCJ3aGF0SXNLZXkiLCJSaWdodGRhdGEiLCJhIiwiZm9yRWFjaCIsImNhdGVnb3J5IiwiT2JqZWN0Iiwia2V5cyIsInByb2R1Y3QiLCJ1bmlxdWVJRCIsInVybCIsInJldHVyblJpZ2h0RGF0YSIsImF1dGhvciIsIm5hbWUiLCJpbWFnZXMiLCJzcGxpdCIsInJldmVyc2UiLCJqb2luIiwicHJpY2UiLCJ1bmRlZmluZWQiLCJzdHJpa2UiLCJub0Rpc2NvdW50IiwiZ2VucmUiLCJ5ZWFyIiwicHVibGlzaGVyIiwiZGVzY3JpcHRpb24iXSwibWFwcGluZ3MiOiIrSEE2Q0EsTUF3REEsRUF4RCtCLENBQUNBLEVBQU1DLEVBQUtDLEVBQVdDLEVBNUJ0RCxTQUF5QkgsRUFBTUMsRUFBS0MsR0FFaEMsSUFBSUUsRUFxQkosT0FuQkFKLEVBQUtLLFNBQ0QsU0FBVUMsR0FDTkEsRUFBU0MsT0FBT0MsS0FBS0YsSUFBV0QsU0FDNUIsU0FBVUksR0FDUyxZQUFYUCxFQUNJTyxFQUFRQyxVQUFZVCxJQUNwQkcsRUFBSUssR0FHUSxPQUFYUCxHQUVETyxFQUFRRSxLQUFPVixJQUNmRyxFQUFJSyxTQU9yQkwsRUFLcURRLENBQWdCWixFQUFLQyxFQUFLQyxNQUFjLDRYQVduREMsRUFBVVUscUhBRVZWLEVBQVVXLG9EQUN2QlgsRUFBVVksZ0JBQWdCWixFQUFVUSx3SEFFRVIsRUFBVU8sU0FBU00sTUFBTSxJQUFJQyxVQUFVQyxLQUFLLFdBN0RwR0MsRUE2RDBIaEIsRUFBVWdCLE1BNUQ5SEMsTUFBckJELEVBQU1ILE1BQU0sS0FBSyxHQUNULEdBRUosR0FBR0csRUFBTUgsTUFBTSxLQUFLLFNBeURrSUssWUF0RGpLLFNBQW9CRixHQUVoQixPQUF3QkMsTUFBckJELEVBQU1ILE1BQU0sS0FBSyxHQUVULEdBQUdHLEVBQU1ILE1BQU0sS0FBSyxRQUdwQixJQUFJRyxFQUFNSCxNQUFNLEtBQUssUUErQ3lJTSxDQUFXbkIsRUFBVWdCLDhLQUtoTGhCLEVBQVVXLDRHQUlWWCxFQUFVVSw2R0FJVlYsRUFBVW9CLHNIQUlWcEIsRUFBVXFCLGtIQUlWckIsRUFBVXNCLGtIQUlWdEIsRUFBVXVCLHdHQXRGNUIsSUFBc0JQIiwiZmlsZSI6IjE1LmJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFjdHVhbFByaWNlIChwcmljZSl7XG4gICAgaWYocHJpY2Uuc3BsaXQoJy8nKVsxXT09dW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG4gICAgcmV0dXJuIGAke3ByaWNlLnNwbGl0KCcvJylbMF19VUFIYDtcblxufVxuZnVuY3Rpb24gbm9EaXNjb3VudChwcmljZSlcbntcbiAgICBpZihwcmljZS5zcGxpdCgnLycpWzFdPT11bmRlZmluZWQpXG4gICAge1xuICAgICAgICByZXR1cm4gYCR7cHJpY2Uuc3BsaXQoJy8nKVswXX1VQUhgO1xuICAgIH1cbiAgICBlbHNlXG4gICAgICAgIHJldHVybiBgICR7cHJpY2Uuc3BsaXQoJy8nKVsxXX1VQUhgO1xufVxuXG5mdW5jdGlvbiByZXR1cm5SaWdodERhdGEoZGF0YSwgS2V5LCB3aGF0SXNLZXkpXG57XG4gICAgbGV0IGE7XG5cbiAgICBkYXRhLmZvckVhY2goXG4gICAgICAgIGZ1bmN0aW9uIChjYXRlZ29yeSl7XG4gICAgICAgICAgICBjYXRlZ29yeVtPYmplY3Qua2V5cyhjYXRlZ29yeSldLmZvckVhY2goXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKHByb2R1Y3Qpe1xuICAgICAgICAgICAgICAgICAgICBpZiAod2hhdElzS2V5PT0ndW5pcXVlSUQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocHJvZHVjdC51bmlxdWVJRCA9PSBLZXkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhID0gcHJvZHVjdDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICh3aGF0SXNLZXk9PSd1cmwnKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocHJvZHVjdC51cmwgPT0gS2V5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYSA9IHByb2R1Y3Q7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgKTtcbiAgICByZXR1cm4gYTtcblxufVxuXG5cbmNvbnN0IHZpZXdwcm9kdWN0RGVzY3JpcHRpb24gPSAoZGF0YSwgS2V5LCB3aGF0SXNLZXksIFJpZ2h0ZGF0YT1yZXR1cm5SaWdodERhdGEoZGF0YSxLZXksIHdoYXRJc0tleSkpID0+YFxuICAgICAgICA8dGhlYWQ+XG4gICAgICAgIDx0cj5cbiAgICAgICAgICAgIDx0aCBjbGFzcz1cIlRleHRIZWFkZXIgXCIgY29sc3Bhbj1cIjJcIj5Cb29rU2hvcCBcIlBST9Cn0JjQotCQ0JlcIjwvdGg+XG4gICAgICAgIDwvdHI+XG4gICAgICAgIDwvdGhlYWQ+XG4gICAgICAgIDx0Ym9keT5cbiAgICAgICAgPHRyPlxuICAgICAgICBcbiAgICAgICAgPHRoIHNjb3BlPVwicm93XCIgY2xhc3M9XCJTaW5nbGVFbGVtXCI+IFxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZCBib3JkZXItaW5mbyBtYi0zICBmaXJzdC1ibG9jayBibG9jay1zaXplXCIgc3R5bGU9XCJtYXgtd2lkdGg6IDQwJTtcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWhlYWRlciBcIj4gJHtSaWdodGRhdGEuYXV0aG9yfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtYm9keVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNCBjbGFzcz1cImNhcmQtdGl0bGVcIj4ke1JpZ2h0ZGF0YS5uYW1lfTwvaDQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9XCIke1JpZ2h0ZGF0YS5pbWFnZXN9XCIgYWx0PVwiJHtSaWdodGRhdGEudXJsfVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiYnRuIGJ0bi1zZWNvbmRhcnlcIiBpZD1cIiR7UmlnaHRkYXRhLnVuaXF1ZUlELnNwbGl0KCcnKS5yZXZlcnNlKCkuam9pbignJyl9XCJcIiA+JHthY3R1YWxQcmljZShSaWdodGRhdGEucHJpY2UpLnN0cmlrZSgpfSAke25vRGlzY291bnQoUmlnaHRkYXRhLnByaWNlKX08L2J1dHRvbj5cbiAgICAgICAgPC90aD5cbiAgICAgICAgPHRoIHNjb3BlPVwicm93XCIgY2xhc3M9XCJTaW5nbGVFbGVtRGVzY3JcIj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWFrZUJvbGRcIj7QndCw0LfQstCwINC60L3QuNCz0Lg6PC9kaXY+XG4gICAgICAgICAgICAgICAgJHtSaWdodGRhdGEubmFtZX1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1ha2VCb2xkXCI+0JDQstGC0L7RgDo8L2Rpdj5cbiAgICAgICAgICAgICAgICAke1JpZ2h0ZGF0YS5hdXRob3J9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtYWtlQm9sZFwiPtCW0LDQvdGAOjwvZGl2PlxuICAgICAgICAgICAgICAgICR7UmlnaHRkYXRhLmdlbnJlfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWFrZUJvbGRcIj7QoNGW0Log0L/Rg9Cx0LvRltC60LDRhtGW0Zc6PC9kaXY+XG4gICAgICAgICAgICAgICAgJHtSaWdodGRhdGEueWVhcn1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1ha2VCb2xkXCI+0JLQuNC00LDQstC90LjRhtGC0LLQvjo8L2Rpdj5cbiAgICAgICAgICAgICAgICAke1JpZ2h0ZGF0YS5wdWJsaXNoZXJ9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtYWtlQm9sZFwiPtCf0YDQviDRidC+OjwvZGl2PlxuICAgICAgICAgICAgICAgICR7UmlnaHRkYXRhLmRlc2NyaXB0aW9ufVxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICBcbiAgICAgICAgPC90aD5cbjwvdHI+XG4gICAgICAgIFxuICAgICAgICA8L3Rib2R5PlxuXG5cblxuXG5cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IHZpZXdwcm9kdWN0RGVzY3JpcHRpb247Il0sInNvdXJjZVJvb3QiOiIifQ==